Master Next.js 15 - Build and Deploy an E-Commerce Project



Section 01: Welcome !


01. Welcome in the course!

02. The project demo

03. Why this course ? The "missing guide" explained

04. Tech stack & prerequisites



Section 02: Environment setup


05. Section intro & objectives

06. Project creation
-open link: https://nextjs.org
-type command: npx create-next-app@latest .
-type command: npm run dev

07. Quick into to Docker & Docker compose

08. VSCode & GitHub Copilot (OPTIONAL)

09. Running Postgres using Docker
-install VSCode extension Container Tools
-open link: https://www.fadocodecamp.com/posts/yaml
-create docker-compose.yml file
-in docker-compose.yml file add docker options
-open link: https://www.docker.com
-download and install Docker application
-type command: docker compose up -d 
-type command: docker ps
-type command: docker exec -it b1b67d7dcd37 bash
-type command: psql -U postgres
-type command: \l
-type command: ctrl + d

10. Setting up prisma
-open link: https://www.prisma.io
-open link: https://www.npmjs.com/package/prisma
-open link: https://www.npmjs.com/package/@prisma/client
-type command: npm i prisma @prisma/client
-type command: npx prisma
-type command: npx prisma init
-in .env file update env variable DATABASE_URL
-type command: docker ps
-type command: npx prisma
-type command: npx prisma db push
-type command: docker stop b1b67d7dcd37
-type command: docker ps
-type command: npx prisma db push
-update password and port in docker-compose.yml file
-type command: docker compose down -v 
-type command: docker compose up -d
-type command: docker exec -it udemy-nextjs-course-ecommerce-project-pj-postgres-1 psql -U postgres -d next15_ecommerce
-type command: \conninfo
-type command: \q
-type command: npx prisma db push

11. Summary & Troubleshooting



Section 03: Product Listing Feature


12. File-based routing in app router
-open link: https://nextjs.org/docs/app
-type command: npm run dev
-open and update app/page.tsx component
-open route: http://localhost:3000
-open route: http://localhost:3000/products

13. Home page and server components in Next.js
-open link: https://nextjs.org/docs/app/getting-started/server-and-client-components
-in component app/page.tsx create HTML elements with Tailwind CSS classes
-open route: http://localhost:3000

14. Type safety and mock data
-create folder lib and mocks.ts file
-in mocks.ts file create type Product and variable const mockProducts
-in component app/page.tsx import variable mockProducts from mocks.ts file
-open route: http://localhost:3000

15. Display products in a grid
-create component product-card.tsx and function ProductCard
-in component app/page.tsx import component ProductCard from component product-card.tsx
-in jsx create div element with Tailwind CSS grid classes
-in div element invoke function mockProducts.map()
-open route: http://localhost:3000

16. Powerful image component
-open link: https://nextjs.org/docs/pages/api-reference/components/image
-in component product-card.tsx import component Image from package next/link
-in next.config.ts file add object images
-open route: http://localhost:3000

17. Responsive images
-in component product-card.tsx, in jsx add to component Image prop sizes
-open route: http://localhost:3000

18. More products, responsive grid, lazy loading
-in mocks.ts file add more products
-in component product-card.tsx add to component Image prop loading
-open route: http://localhost:3000